server:
  port: 8204
spring:
  application:
    name: component-gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh #payment_routh #路由的ID，没有固定规则，但要求唯一，建议配合服务名
          #uri: http://localhost:8101  #匹配后提供服务的路由地址 没有进行负载均衡
          uri: lb://basic-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/** #断言，路径相匹配的进行路由

        - id: payment_routh2 #payment_routh #路由的ID，没有固定规则，但要求唯一，建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://basic-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/lb/** #断言，路径相匹配的进行路由

        - id: api_routh #payment_routh #路由的ID，没有固定规则，但要求唯一，建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://business-api-service #匹配后提供服务的路由地址
          predicates:
            - Path=/api/** #断言，路径相匹配的进行路由

        - id: member_routh #payment_routh #路由的ID，没有固定规则，但要求唯一，建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://basic-member-service #匹配后提供服务的路由地址
          predicates:
            - Path=/member/** #断言，路径相匹配的进行路由

        - id: goods_routh #payment_routh #路由的ID，没有固定规则，但要求唯一，建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://basic-goods-service #匹配后提供服务的路由地址
          predicates:
            - Path=/goods/** #断言，路径相匹配的进行路由
#eureka:
#  instance:
#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
#    prefer-ip-address: true
#  client:
#    fetchRegistry: true
#    registerWithEureka: true
#    serviceUrl:
#      defaultZone: http://localhost:8201/eureka